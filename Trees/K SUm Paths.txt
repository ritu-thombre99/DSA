Given a binary tree and an integer K. Find the number of paths in the tree which have their sum equal to K.
A path may start from any node and end at any node in the downward direction.

class Solution{
  public:
    void util(Node *root, int k, vector<int> v, int &count)
    {
        if(!root)
            return;
        
        v.push_back(root->data);
        util(root->left,k,v,count);
        util(root->right,k,v,count);
        int n = v.size();
        for(int i=n-1;i>=0;i--)
        {
            k = k - v[i];
            if (k==0)
                count = count + 1;
        }
    }
    int sumK(Node *root,int k)
    {
        // code here 
        int count = 0;
        vector<int> v;
        util(root,k,v,count);
        return count;
    }
};