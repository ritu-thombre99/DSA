class Solution
{
    public:
    //Function to serialize a tree and return a list containing nodes of tree.
    vector<int> v;
    vector<int> serialize(Node *root) 
    {
        //Your code here
        
        if(root)
        {
            v.push_back(root->data);
            serialize(root->left);
            serialize(root->right);
        }
        else
            v.push_back(-1);
        return v;
    }
    
    //Function to deserialize a list and construct the tree.
    int i=0;
    Node * deSerialize(vector<int> &A)
    {
       //Your code here
       if(i==A.size())
            return NULL;
        int val = A[i];
        i++;
        if(val == -1)
            return NULL;
        Node *root = new Node(val);
        root->left = deSerialize(A);
        root->right = deSerialize(A);
        return root;
    }

};