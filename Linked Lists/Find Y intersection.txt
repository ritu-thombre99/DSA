//Function to find intersection point in Y shaped Linked Lists.
int intersectPoint(Node* head1, Node* head2)
{
    // Your Code Here
    if(!head1 || !head2)
        return -1;
    stack<Node*> s1, s2;
    Node *ptr1 = head1;
    while(ptr1)
    {
        s1.push(ptr1);
        ptr1=ptr1->next;
    }
    Node *ptr2 = head2;
    while(ptr2)
    {
        s2.push(ptr2);
        ptr2=ptr2->next;
    }
    Node *intersection = NULL;
    while(!s1.empty() && !s2.empty())
    {
        if(s1.empty() || s2.empty())
            break;
        if(s1.top() == s2.top())
        {
            intersection = s1.top();
            s1.pop();
            s2.pop();
        }
        else
            break;
    }
    if(intersection)
        return intersection->data;
    return -1;
}