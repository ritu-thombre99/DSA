the problem reduces to finding subsets with given difference

class Solution {
  public:
    int findTargetSumWays(vector<int>&A ,int target) {
        //Your code here
        int sum = 0;
        for(int i=0;i<A.size();i++)
            sum += A[i];
        int dif = (sum-target);
        if(dif%2!=0 || target>sum)
            return 0;
        int n = A.size();
        sum = dif/2;
        vector<vector<int>> dp(n+1,vector<int>(sum+1,0));
        for (int i = 0; i <= n; i++)
            dp[i][0] = 1;
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<=sum;j++)
            {
                if(A[i-1]>j)
                    dp[i][j] = dp[i-1][j];
                else
                    dp[i][j] = dp[i-1][j] + dp[i-1][j-A[i-1]];
            }
        }
        return dp[n][sum];
        
            
    }
};