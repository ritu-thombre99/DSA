class Solution {
  public:
    int mod= 1000000007;
    long long int numberOfPaths(int m, int n){
        // code here
        vector<vector<long long int>> dp(m,vector<long long int>(n,0));
        for(int i=0;i<m;i++)
            dp[i][0]=1;
        for(int j=0;j<n;j++)
            dp[0][j]=1;
        for(int i=1;i<m;i++)
            for(int j=1;j<n;j++)
                dp[i][j] = (dp[i-1][j]+dp[i][j-1])%(mod);
        return dp[m-1][n-1];
    }
};


// Number of unique paths with recusrion
class Solution
{
    public:
    //Function to find total number of unique paths.
    void solve(int x,int y,int a,int b,int &count)
    {
        if(x>=a || y>=b)
            return;
        if(x==a-1 && y==b-1)
        {
            count++;
            return;
        }
        solve(x+1,y,a,b,count);
        solve(x,y+1,a,b,count);
    }
    int NumberOfPath(int a, int b)
    {
        //code here
        int count = 0;
        solve(0,0,a,b,count);
        return count;
    }
};