Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.

reset contoguous sum whenever it becomes less than zero as negative values do not contribute to maximum sum
class Solution{
    public:
    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long long maxSubarraySum(int arr[], int n){
        
        // Your code here
        long long max_sum=arr[0], curr_sum=0;
        for(int i=0;i<n;i++)
        {
            if(curr_sum<0)
                curr_sum=0;
            curr_sum += arr[i];
            max_sum = max(max_sum, curr_sum);
        }
        return max_sum;
    }
};