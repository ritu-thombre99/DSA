remove those which have higher frequency first
frequecny updated dynamically

class Solution{
    public:
    int maxDistinctNum(int arr[], int n, int k)
    {
    	// Complete the function
    	priority_queue<int> pq;
    	unordered_map<int,int> mp;
    	for(int i=0;i<n;i++)
    	    mp[arr[i]]++;
	    for(auto itr=mp.begin();itr!=mp.end();itr++)
	        pq.push(itr->second);
        while(!pq.empty() && k--)
        {
            int top = pq.top();
            pq.pop();
            if (top-1!=0)
                pq.push(top-1);
        }
        return pq.size();
    }
};