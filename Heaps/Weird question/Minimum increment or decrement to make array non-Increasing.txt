increment/decrement array elements to make it non increasing

complexity 0(nlogn)

method 1 - using minheap

class Solution{
public:
    int minOperations(int *a,int n)
    {
        priority_queue<int, vector<int>, greater<int> > pq;
        int dif, sum = 0;
        for (int i = 0; i < n; i++) {
            if (!pq.empty() && pq.top() < a[i]) {
                dif = a[i] - pq.top();
                sum += dif;
                pq.pop();
                pq.push(a[i]);
            }
            pq.push(a[i]);
        }
     
        return sum;
    }
};

method 1 - using maxheap

int DecreasingArray(int arr[], int n)
{
	int ans = 0;

	// max heap
	priority_queue<int> pq;

	// Here in the loop we will
	// check that whether the top
	// of priority queue is greater than the upcoming array
	// element. If yes then we calculate the difference.
	// After that we will remove that element and push the
	// current element in queue. And the sum is incremented
	// by the value of difference

	for (int i = n - 1; i >= 0; i--) {
		if (!pq.empty() and pq.top() > arr[i]) {
			ans += abs(arr[i] - pq.top());
			pq.pop();
			pq.push(arr[i]);
		}
		pq.push(arr[i]);
	}
	return ans;
}

