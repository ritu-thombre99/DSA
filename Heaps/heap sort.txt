void heapify(int arr[], int n, int i) {
    // Find largest among root, left child and right child
    int largest = i;
    int left = 2*i+1;
    int right = 2*i+2;
    if(left<n && arr[largest] < arr[left])
        largest = left;
    if(right<n && arr[largest] < arr[right])
        largest = right;
    if(largest!=i)
    {
        int temp = arr[i];
        arr[i] = arr[largest];
        arr[largest] = temp;
        heapify(arr,n,largest);
    }
}

// Main function to do heap sort
void buildHeap(int arr[], int n) {
    // Build max heap
    for(int i=(n/2)-1;i>=0;i--)
        heapify(arr,n,i);
    for(int i=n-1;i>=0;i--)
    {
        int temp = arr[i];
        arr[i] = arr[0];
        arr[0] = temp;
        heapify(arr,i,0);
    }
    
}