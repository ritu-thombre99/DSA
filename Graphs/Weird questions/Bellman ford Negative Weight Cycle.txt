Bellman ford algorithm find shortest distance between source and every other nodes in (V-1) steps if there is not negative weight cyce

If negavtive weight cycle is present, distcance between source and some nodes will keep on decreasing due to presence of negative weight cycle even after (V-1) steps

Complexity - O(VE)

class Solution {
public:
	int isNegativeWeightCycle(int n, vector<vector<int>>edges){
	    // Code here
	    vector<int> dist(n,100000000);
        dist[0] = 0;
        for(int iter=0;iter<(n-1);iter++)
        {
            for(int i=0;i<edges.size();i++)
            {
                int u = edges[i][0], v = edges[i][1], w = edges[i][2];
                if(dist[u]+w < dist[v])
                    dist[v]=dist[u]+w;
            }
        }
        for(int i=0;i<edges.size();i++)
        {
            int u = edges[i][0], v = edges[i][1], w = edges[i][2];
            if(dist[u]+w < dist[v])
                return 1;
        }
        return 0;
	}
};