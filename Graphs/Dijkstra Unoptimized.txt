Complexity - O(V*V)
outer loop runs V times
inner loop V times
visited array used to denote if node has been included in shortest path

class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    int minDistance(vector<int> dist, vector<bool> visited)
    {
        int index = -1;
        int min = INT_MAX;
        for(int i=0;i<dist.size();i++)
        {
            if(visited[i] == false && dist[i]<min)
            {
                min = dist[i];
                index = i;
            }
        }
        return index;
    }
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        vector<int> dist;
        vector<bool> visited;
        for(int i=0;i<V;i++)
        {
            visited.push_back(false);
            dist.push_back(INT_MAX);
        }
        dist[S] = 0;
        for (int count = 0; count < V ; count++) 
        {
            int u = minDistance(dist, visited);
            visited[u] = true;
     
            for(int i=0;i<adj[u].size();i++)
            {
                int v = adj[u][i][0];
                int weight = adj[u][i][1];
                if(!visited[v] && dist[u]!=INT_MAX && dist[u]+weight < dist[v])
                    dist[v] = dist[u]+weight;
            }
        }
        return dist;
        
    }
};